@page "/vehicles/edit/{id:int}"

@using PeopleManager.Dto.Requests
@using PeopleManager.Sdk

@inject VehicleApiService VehicleApiService
@inject NavigationManager NavigationManager

<h3>Create a new vehicle</h3>

@if (Model is not null)
{
    <EditForm Model="Model" OnValidSubmit="ValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <CreateEdit Model="@Model"></CreateEdit>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    private VehicleRequest? Model { get; set; }

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadModel();

        await base.OnInitializedAsync();
    }

    private async Task LoadModel()
    {
        var vehicleResult = await VehicleApiService.Get(Id);
        if (vehicleResult is null)
        {
            return;
        }
        Model = new VehicleRequest
            {
                LicensePlate = vehicleResult.LicensePlate,
                Brand = vehicleResult.Brand,
                Type = vehicleResult.Type,
                ResponsiblePersonId = vehicleResult.ResponsiblePersonId
            };
    }

    private async Task ValidSubmit()
    {
        if (Model is null)
        {
            return;
        }
        await VehicleApiService.Update(Id, Model);
        NavigationManager.NavigateTo("vehicles");
    }

}